    <script>
        function loadScenario(x,y) {
            let feature = document.getElementById(x).innerHTML;
            let scenario = document.getElementById(y).innerHTML;
            document.getElementById('right-section').innerHTML = feature + scenario;
        }
    </script>
    <script>
        function toggleViewmode() {
            let element = document.getElementById('viewmode');
            let mode = element.getAttribute('name') === "listview" ? "treeview" : "listview";

            presetScenarios("");

            element.setAttribute("name", mode);
            loadViewmode(mode);
        }
    </script>
    <script>
        function loadViewmode(x) {
            let listview = document.getElementById(x).innerHTML;
            document.getElementById('scenario-view').innerHTML = listview;
        }
    </script>
    <script>
        function loadAnalytics(x) {
            let analytics = document.getElementById(x).innerHTML;
            document.getElementById('right-section').innerHTML = analytics;
        }
    </script>
	<script>
		function presetScenarios(x) {
			let input = document.getElementById("scenario-filter");
            input.value = x;

            filterScenarios();
		}
	</script>
    <script>
        function filterFeatures() {
            var table = document.getElementById("scenario-list");
            var tr = table.getElementsByTagName("tr");

            for (var i = 0; i < tr.length; i++) {
                var role = tr[i].getAttribute("data-role");

                if (role == "feature") {
                    tr[i].style.display = "none";
                }
            }

            var features = [];

            for (var i = 0; i < tr.length; i++) {
                var role = tr[i].getAttribute("data-role");

                if (role != "feature") {
                    if (tr[i].style.display == "") {
                        var parent = tr[i].getAttribute("data-parent");
                        features.push(parent);
                    }
                }
            }

            for (var i = 0; i < tr.length; i++) {
                var role = tr[i].getAttribute("data-role");

                if (role == "feature") {
                    var name = tr[i].getAttribute("data-name");
                    if (features.includes(name))
                        tr[i].style.display = "";
                }
            }
        }
    </script>
    <script>
        function filterScenarios() {
            var input = document.getElementById("scenario-filter");
            var filterTokens = input.value.toUpperCase().split(/\s+/);
            var table = document.getElementById("scenario-list");
            var tr = table.getElementsByTagName("tr");

            for (var i = 0; i < tr.length; i++) {
                var role = tr[i].getAttribute("data-role");
                var tags = tr[i].getAttribute("data-tags");
                var td = tr[i].getElementsByTagName("td");
                var rowText = "";
                var found = false;

                if (role == "feature")
				    continue;

                for (var j = 0; j < td.length; j++) {
                    rowText += td[j].textContent.toUpperCase() + " ";
                }
                
                var tagTokens = tags.toUpperCase().split(/\s+/);
                for (var t = 0; t < tagTokens.length; t++) {
                    rowText += tagTokens[t].toUpperCase() + " ";
                }

                found = filterTokens.every(token => rowText.includes(token));

                tr[i].style.display = found ? "" : "none";
            }

            filterFeatures();
        }
    </script>
    <script>
        function sortTableByColumn(n) {
            let table;
            table = document.getElementById("scenariolist");
            var rows, i, x, y, count = 0;
            var switching = true;

            var direction = "ascending";

            while (switching) {
                switching = false;
                var rows = table.rows;

                for (i = 1; i < (rows.length - 1); i++) {
                    var Switch = false;

                    x = rows[i].getElementsByTagName("td")[n];
                    y = rows[i + 1].getElementsByTagName("td")[n];

                    if (direction == "ascending") {

                        if (x.innerHTML.toLowerCase() >
                            y.innerHTML.toLowerCase()) {

                            Switch = true;
                            break;
                        }
                    } else if (direction == "descending") {

                        if (x.innerHTML.toLowerCase() <
                            y.innerHTML.toLowerCase()) {

                            Switch = true;
                            break;
                        }
                    }
                }
                if (Switch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;

                    count++;
                } else {
                    if (count == 0 && direction == "ascending") {
                        direction = "descending";
                        switching = true;
                    }
                }
            }
        }
    </script>
    <script>
        function sortTableByColumnByAttibute(n,a) {
            let table;
            table = document.getElementById("scenariolist");
            var rows, i, x, y, count = 0;
            var switching = true;

            var direction = "ascending";

            while (switching) {
                switching = false;
                var rows = table.rows;

                for (i = 1; i < (rows.length - 1); i++) {
                    var Switch = false;

                    x = rows[i].getElementsByTagName("td")[n];
                    y = rows[i + 1].getElementsByTagName("td")[n];

                    if (direction == "ascending") {

                        if (x.getAttribute(a) >
                            y.getAttribute(a)) {

                            Switch = true;
                            break;
                        }
                    } else if (direction == "descending") {

                        if (x.getAttribute(a) <
                            y.getAttribute(a)) {

                            Switch = true;
                            break;
                        }
                    }
                }
                if (Switch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;

                    count++;
                } else {
                    if (count == 0 && direction == "ascending") {
                        direction = "descending";
                        switching = true;
                    }
                }
            }
        }
    </script>