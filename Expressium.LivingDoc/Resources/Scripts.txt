    <script>
        function loadScenario(x) {
            var featureId = x.getAttribute('data-featureid');
            var scenarioId = x.getAttribute('data-scenarioid');
            var feature = document.getElementById(featureId).innerHTML;
            var scenario = document.getElementById(scenarioId).innerHTML;

            document.getElementById('right-section').innerHTML = feature + scenario;
        }
    </script>
    <script>
        function loadFeature(x) {
            var featureId = x.getAttribute('data-featureid');
            var feature = document.getElementById(featureId).innerHTML;
            var table = document.getElementById("project-view");
            var tr = table.getElementsByTagName("tr");

            var previous = false;
            for (var i = 0; i < tr.length; i++) {
                var role = tr[i].getAttribute("data-role");

                if (role == "scenario") {
                    var parentId = tr[i].getAttribute('data-featureid');
                    if (featureId == parentId) {
                        var scenarioId = tr[i].getAttribute('data-scenarioid');
                        if (previous) {
                            feature = feature.concat("<hr>");
                        }

                        feature = feature.concat(document.getElementById(scenarioId).innerHTML);
                        previous = true;
                    }
                }
            }

            document.getElementById('right-section').innerHTML = feature;

            var rules = document.getElementById('right-section').querySelectorAll('[data-rule-replica]');
            for (var i = 0; i < rules.length; i++)
                rules[i].style.display = "none";
        }
    </script>
    <script>
        function loadViewmode(x,y) {
            var listview = document.getElementById(x).innerHTML;

            document.getElementById('scenario-view').innerHTML = listview;

            var exists = document.getElementById('view-title');
            if (exists)
                document.getElementById('view-title').innerHTML = y;

            filterScenarios();
        }
    </script>
    <script>
        function loadAnalytics(x) {
            var analytics = document.getElementById(x).innerHTML;

            document.getElementById('right-section').innerHTML = analytics;
        }
    </script>
    <script>
        function filterScenarios() {
            var input = document.getElementById("scenario-filter");
            var filterTokens = input.value.toUpperCase().split(/\s+/);
            var table = document.getElementById("table-list");
            var tr = table.getElementsByTagName("tr");

            var statuses = [];
            var prefilters = document.getElementsByTagName("button");
            for (var i = 0; i < prefilters.length; i++) {
                var prefilter = prefilters[i].getAttribute("data-prefilter");
                var active = prefilters[i].className.includes(" active");
                if (active) {
                    statuses.push(prefilter);
                }
            }

            for (var i = 0; i < tr.length; i++) {
                var role = tr[i].getAttribute("data-role");
                var tags = tr[i].getAttribute("data-tags");
                var td = tr[i].getElementsByTagName("td");
                var rowText = "";
                var found = false;

                if (role == "folder")
                    continue;

                if (role == "feature")
                    continue;

                for (var j = 0; j < td.length; j++) {
                    rowText += td[j].textContent.toUpperCase() + " ";
                }

                var tagTokens = tags.toUpperCase().split(/\s+/);
                for (var t = 0; t < tagTokens.length; t++) {
                    rowText += tagTokens[t].toUpperCase() + " ";
                }

                found = filterTokens.every(token => rowText.includes(token));

                var hasPrefilter = false;
                for (var t = 0; t < statuses.length; t++) {
                    var prefilter = statuses[t];
                    if (rowText.includes(prefilter.toUpperCase())) {
                        hasPrefilter = true;
                    }
                }

                if (statuses.length > 0 && !hasPrefilter) {
                    found = false;
                }

                tr[i].style.display = found ? "" : "none";
            }

            filterFeatures();
        }
    </script>
    <script>
        function filterFeatures() {
            var table = document.getElementById("table-list");
            var tr = table.getElementsByTagName("tr");

            for (var i = 0; i < tr.length; i++) {
                var role = tr[i].getAttribute("data-role");

                if (role == "feature")
                    tr[i].style.display = "none";
            }

            var features = [];

            for (var i = 0; i < tr.length; i++) {
                var role = tr[i].getAttribute("data-role");

                if (role != "feature") {
                    if (tr[i].style.display == "") {
                        var parent = tr[i].getAttribute("data-parent");
                        features.push(parent);
                    }
                }
            }

            for (var i = 0; i < tr.length; i++) {
                var role = tr[i].getAttribute("data-role");

                if (role == "feature") {
                    var name = tr[i].getAttribute("data-name");
                    if (features.includes(name))
                        tr[i].style.display = "";
                }
            }

            for (var i = 0; i < tr.length; i++) {
                var role = tr[i].getAttribute("data-role");
                if (role == "feature") {
                    if (tr[i].style.display == "") {
                        var featureId = tr[i].getAttribute('data-featureid');
                        var collapse = tr[i].getAttribute('data-collapse');
                        if (collapse == "true") {
                            for (var g = 0; g < tr.length; g++) {
                                var scenarioRole = tr[g].getAttribute("data-role");
                                if (scenarioRole == "scenario") {
                                    var featureIdSlave = tr[g].getAttribute('data-featureid');
                                    if (featureId == featureIdSlave) {
                                        tr[g].style.display = "none";
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    </script>
    <script>
        function sortTableByColumn(n) {
            var table = document.getElementById("table-grid");
            var count = 0;
            var switching = true;
            var direction = "ascending";

            while (switching) {
                switching = false;
                var rows = table.rows;

                for (var i = 1; i < (rows.length - 1); i++) {
                    var Switch = false;

                    var x = rows[i].getElementsByTagName("td")[n];
                    var y = rows[i + 1].getElementsByTagName("td")[n];

                    if (direction == "ascending") {

                        if (x.innerHTML.toLowerCase() >
                            y.innerHTML.toLowerCase()) {

                            Switch = true;
                            break;
                        }
                    } else if (direction == "descending") {

                        if (x.innerHTML.toLowerCase() <
                            y.innerHTML.toLowerCase()) {

                            Switch = true;
                            break;
                        }
                    }
                }
                if (Switch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;

                    count++;
                } else {
                    if (count == 0 && direction == "ascending") {
                        direction = "descending";
                        switching = true;
                    }
                }
            }
        }
    </script>
    <script>
        function sortTableByColumnByAttibute(n,a) {
            var table = document.getElementById("table-grid");
            var count = 0;
            var switching = true;

            var direction = "ascending";

            while (switching) {
                switching = false;
                var rows = table.rows;

                for (var i = 1; i < (rows.length - 1); i++) {
                    var Switch = false;

                    var x = rows[i].getElementsByTagName("td")[n];
                    var y = rows[i + 1].getElementsByTagName("td")[n];

                    if (direction == "ascending") {

                        if (x.getAttribute(a) >
                            y.getAttribute(a)) {

                            Switch = true;
                            break;
                        }
                    } else if (direction == "descending") {

                        if (x.getAttribute(a) <
                            y.getAttribute(a)) {

                            Switch = true;
                            break;
                        }
                    }
                }
                if (Switch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;

                    count++;
                } else {
                    if (count == 0 && direction == "ascending") {
                        direction = "descending";
                        switching = true;
                    }
                }
            }
        }
    </script>
    <script>
        function loadEditor(x) {
            var editor = document.getElementById(x).innerHTML;

            document.getElementById('right-section').innerHTML = editor;

            document.getElementById("script").value = "";
            document.getElementById("script").value += "@TA-??? @Review";
            document.getElementById("script").value += "\nScenario: Successfully Creating a new Gherkin Script";            
        }
    </script>
    <script>
        function filterStepDefinitions() {
			var input = document.getElementById("stepdefinition-filter"); 
			var filterTokens = input.value.toUpperCase().split(/\s+/);
			var table = document.getElementById("steps-table-list");
			var tr = table.getElementsByTagName("tr");

			var numberOfFound = 0;

            for (var i = 0; i < tr.length; i++) {
                var td = tr[i].getElementsByTagName("td");
                var rowText = "";
                var found = false;

                for (var j = 0; j < td.length; j++) {
                    rowText += td[j].textContent.toUpperCase() + " ";
                }

				found = filterTokens.every(token => rowText.includes(token));

				if (found)
					numberOfFound++;

                if (numberOfFound >= 6)
                    found = false;

				tr[i].style.display = found ? "" : "none";
            }
        }
    </script>
    <script>
        function loadStepDefinition(row) {
            var link = row.querySelector("td a");
            var linkText = link.textContent || link.innerText;

            var script = document.getElementById("script").value;
            if (script.endsWith("\n") || script === "") {
                document.getElementById("script").value += "    " + linkText;
            } else {
                document.getElementById("script").value += "\n    " + linkText;
            }
        }
    </script>
	<script>
		function loadStepDefinitionByEnter() {
            var table = document.getElementById("steps-table-list");
			var tr = table.getElementsByTagName("tr");

			for (var i = 0; i < tr.length; i++) {
				if (tr[i].style.display == "") {
					loadStepDefinition(tr[i]);
                    break;
				}
			}

			document.getElementById("stepdefinition-filter").value = "";
		}
	</script>
    <script>
        function editorCopy() {
            var copyText = document.getElementById("script");
            navigator.clipboard.writeText(copyText.value);
        }
    </script>
    <script>
        function loadCollapse(x) {
            var collapse = x.getAttribute('data-collapse');
            var parent = x.parentElement;

            if (collapse == "false") {
                x.innerHTML = "&#11208;";
                x.setAttribute('data-collapse', 'true');
                parent.setAttribute('data-collapse', 'true');
            } else {

                x.innerHTML = "&#11206;";
                x.setAttribute('data-collapse', 'false');
                parent.setAttribute('data-collapse', 'false');
            }

            filterScenarios();
        }
    </script>
    <script>
        function togglePrefilter(x) {
            var attribute = x.className;

            if (attribute.includes(" active")) {
                x.className = x.className.replace(" active", "");
            } else {
                x.className += " active";
            }

            filterScenarios();
        }
    </script>
    <script>
        function clearPrefilters() {
            var prefilters = document.getElementsByTagName("button");
            for (var i = 0; i < prefilters.length; i++) {
                var prefilter = prefilters[i].getAttribute("data-prefilter");
                var active = prefilters[i].className.includes(" active");
                if (active) {
                    prefilters[i].className = prefilters[i].className.replace(" active", "");
                }
            }

            var input = document.getElementById("scenario-filter");
            input.value = '';

            filterScenarios();
        }
    </script>